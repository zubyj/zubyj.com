{"ast":null,"code":"var _jsxFileName = \"/Users/zuby/Desktop/zubyjaved.com/frontend/src/components/projects/ProjectItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectItem(_ref) {\n  _s();\n\n  let {\n    name,\n    icon,\n    buttonName,\n    path,\n    imgPath,\n    description\n  } = _ref;\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isAutoFlip, setIsAutoFlip] = useState(true); // duration in milliseconds.\n\n  const startAutoFlip = duration => {\n    const timer = setTimeout(() => setIsFlipped(!isFlipped), 4000);\n    setTimeout(() => setIsAutoFlip(false), duration);\n\n    if (!isAutoFlip) {\n      clearTimeout(timer);\n    }\n  };\n\n  startAutoFlip(8000);\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsFlipped(!isFlipped);\n    setIsAutoFlip(false);\n  };\n\n  const open = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    window.open(path, '_blank');\n  };\n\n  const img = /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"Project-img\",\n    src: imgPath,\n    alt: \"Project screenshot\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 17\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"Grid-item\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Item-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Title-icon\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), name, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"Open-project-btn\",\n          onClick: open,\n          variant: \"contained\",\n          target: \"_blank\",\n          children: buttonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n      isFlipped: isFlipped,\n      flipDirection: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Project-title\",\n        children: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectItem, \"o8+u82ivO8sINNRcuhynhNXt3yM=\");\n\n_c = ProjectItem;\nexport default ProjectItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectItem\");","map":{"version":3,"sources":["/Users/zuby/Desktop/zubyjaved.com/frontend/src/components/projects/ProjectItem.js"],"names":["React","useEffect","useState","ReactCardFlip","Container","Button","ProjectItem","name","icon","buttonName","path","imgPath","description","isFlipped","setIsFlipped","isAutoFlip","setIsAutoFlip","startAutoFlip","duration","timer","setTimeout","clearTimeout","handleClick","e","preventDefault","open","stopPropagation","window","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,WAAT,OAA2E;AAAA;;AAAA,MAAtD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,OAA/B;AAAwCC,IAAAA;AAAxC,GAAsD;AAEvE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C,CAHuE,CAKvE;;AACA,QAAMe,aAAa,GAAIC,QAAD,IAAc;AAChC,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAMN,YAAY,CAAC,CAACD,SAAF,CAAnB,EAAiC,IAAjC,CAAxB;AACAO,IAAAA,UAAU,CAAC,MAAMJ,aAAa,CAAC,KAAD,CAApB,EAA6BE,QAA7B,CAAV;;AAEA,QAAI,CAACH,UAAL,EAAiB;AACbM,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACH;AACJ,GAPD;;AASAF,EAAAA,aAAa,CAAC,IAAD,CAAb;;AAEA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAJD;;AAMA,QAAMS,IAAI,GAAIF,CAAD,IAAO;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACG,eAAF;AACAC,IAAAA,MAAM,CAACF,IAAP,CAAYf,IAAZ,EAAkB,QAAlB;AACH,GAJD;;AAMA,QAAMkB,GAAG,gBAAG;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,GAAG,EAAEjB,OAAlC;AAA2C,IAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAZ;;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAiC,IAAA,OAAO,EAAEW,WAA1C;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAA8Bd;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKD,IAFL,eAGI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,OAAO,EAAEkB,IAA9C;AAAoD,UAAA,OAAO,EAAC,WAA5D;AAAwE,UAAA,MAAM,EAAC,QAA/E;AAAA,oBACKhB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEI,SAA1B;AAAqC,MAAA,aAAa,EAAC,YAAnD;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBACKe;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAIQ;AAAA,kBAAOhB;AAAP;AAAA;AAAA;AAAA;AAAA,cAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAlDQN,W;;KAAAA,W;AAoDT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport Container from '@mui/material/Container'\nimport Button from '@mui/material/Button';\n\nfunction ProjectItem({name, icon, buttonName, path, imgPath, description}) {\n\n    const [isFlipped, setIsFlipped] = useState(false);\n    const [isAutoFlip, setIsAutoFlip] = useState(true);\n\n    // duration in milliseconds.\n    const startAutoFlip = (duration) => {\n        const timer = setTimeout(() => setIsFlipped(!isFlipped), 4000);\n        setTimeout(() => setIsAutoFlip(false), duration);\n    \n        if (!isAutoFlip) {\n            clearTimeout(timer);\n        }\n    }\n    \n    startAutoFlip(8000);\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        setIsFlipped(!isFlipped);\n        setIsAutoFlip(false);\n    }   \n\n    const open = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        window.open(path, '_blank');\n    }\n\n    const img = <img className=\"Project-img\" src={imgPath} alt=\"Project screenshot\" />\n\n    return (\n        <Container className=\"Grid-item\" onClick={handleClick}>\n            <div className=\"Item-title\">\n                <span className=\"Title-icon\">{icon}</span>\n                {name}\n                <div>\n                    <Button className=\"Open-project-btn\" onClick={open} variant=\"contained\" target=\"_blank\">\n                        {buttonName}\n                    </Button>\n                </div>\n            </div>\n            <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n                <span className=\"Project-title\">\n                    {img}\n                </span>\n                    <span>{description}</span>\n            </ReactCardFlip>\n        </Container>\n    )\n}\n\nexport default ProjectItem;"]},"metadata":{},"sourceType":"module"}